1. Make non-functional (but retain) APIView and ViewSet code added for testing purposes only:
  TestApiView and TestViewSet in views.py
  TestApiViewSerializer from serializers.py (used for both APIView & ViewSet code)
  urls.py (endpoints)
2. Add expertise field to UserProfile model (models.py, serializers.py, and search_fields in views.py)
3. Consolidate UpdateOwnNewsItems and UpdateOwnEvent into single function (if this turns out to really be generic)
4. Look into what "is_staff" implies, and update the "help_text" (or remove this feature, if not needed)
5. Support generation of OpenAPI docs, see https://www.django-rest-framework.org/api-guide/schemas/
6. See if 'id' on Event, EventKeyword etc. need to be (de)serialised  - if not update serializers.py
7. Refactor to remove duplication of controlled vocabularies (e.g. Event->Cost, Event->Accessibility etc.) in serializers.py and models.py
8. Enable filtering for 'dates', 'contactId', 'elixirPlatform', 'community', 'hostedBy', 'organisedBy', 'sponsoredBy' in EventViewSet  ("search_fields") - once these are added
9. Enable filtering over 'dates', 'costs', 'topics', 'keywords', 'prerequisites' (all ManyToManyField) in EventViewSet
10. null=True, blank=True are set on Event model for homepage but this is mandatory (so these fields aren't needed?)
11. Refactor EventTopic to just Topic (it's now re-used by multiple objects other than Event)
12. Refactor to make validate_topics DRY (the code is duplicated in two serializers)
13. Refactor EventKeyword to just TrainingKeyword (or maybe just Keyword) it's now re-used by two objects )
14. Check that discrepany in name and human-readable label is safe for all practical purposes:  BIOINFO = '3D-BioInfo', _('3D-BioInfo'),  PROFESSIONAL_INITIAL = 'Professional (initial)', _('Professional (initial)'),    PROFESSIONAL_CONTINUED = 'Professional (continued)', _('Professional (continued)')
15. Consider adding team & uses fields to search_fields in Django admin interface (ProjectAdmin)
16. Explore whether filtering by EDAM Topic (in Django admin interface) has value .. could be useful if EDAM terms were rendered (rather than URIs as currently)
