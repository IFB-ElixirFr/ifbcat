# Generated by Django 3.0 on 2020-07-20 14:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('ifbcatsandbox_api', '0033_auto_20200720_1255'),
    ]

    operations = [
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orgid', models.CharField(blank=True, help_text='Organisation ID (GRID or ROR ID) of the organisation.', max_length=255, null=True, unique=True)),
                ('description', models.TextField(help_text='Short description of the organisation.')),
                ('homepage', models.URLField(help_text='Homepage of the organisation.', max_length=255)),
                ('field', models.CharField(choices=[('Computer science', 'Computer science'), ('Biotechnology', 'Biotechnology'), ('Environmental science', 'Environmental science'), ('Agricultural science', 'Agricultural science'), ('Biomedical science', 'Biomedical science'), ('Biology', 'Biology')], help_text='Controlled vocabulary of application areas of organisations and bioinformatics teams.', max_length=255, unique=True)),
                ('name', models.CharField(blank=True, help_text='Name of the organisation.', max_length=255)),
                ('city', models.CharField(blank=True, help_text='Nearest city to the organisation.', max_length=255)),
            ],
        ),
        migrations.AlterField(
            model_name='event',
            name='dates',
            field=models.ManyToManyField(help_text='Dates or periodes on which the event takes place', related_name='dates', to='ifbcatsandbox_api.EventDate'),
        ),
        migrations.CreateModel(
            name='ElixirPlatform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Data', 'Data'), ('Tools', 'Tools'), ('Compute', 'Compute'), ('Interoperability', 'Interoperability'), ('Training', 'Training')], help_text="Name of the ELIXIR Platform, e.g. 'Tools'.", max_length=255, unique=True)),
                ('description', models.TextField(help_text='Short description of the ELIXIR Platform.')),
                ('homepage', models.URLField(help_text='Homepage of the ELIXR Platform.', max_length=255)),
                ('coordinator', models.OneToOneField(help_text='Coordinator of the ELIXIR Platform activities in France.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='elixirPlatformCoordinator', to=settings.AUTH_USER_MODEL)),
                ('deputies', models.ManyToManyField(help_text='Deputy coordinator of the ELIXIR Platform activities in France.', related_name='elixirPlatformDeputies', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('3D-BioInfo', '3D-BioInfo'), ('Galaxy', 'Galaxy'), ('Intrinsically Disordered Proteins', 'Intrinsically Disordered Proteins'), ('Marine Metagenomics', 'Marine Metagenomics'), ('Metabolomics', 'Metabolomics'), ('Microbial Biotechnology', 'Microbial Biotechnology'), ('Plant Sciences', 'Plant Sciences'), ('Proteomics', 'Proteomics'), ('Federated Human Data', 'Federated Human Data'), ('Human Copy Number Variation', 'Human Copy Number Variation'), ('Rare Diseases', 'Rare Diseases')], help_text="Name of the community, e.g. 'Galaxy'.", max_length=255, unique=True)),
                ('description', models.TextField(help_text='Short description of the community.')),
                ('homepage', models.URLField(help_text='Homepage of the community.', max_length=255)),
                ('organisations', models.ManyToManyField(help_text='An organisation to which the community is affiliated.', related_name='communities', to='ifbcatsandbox_api.Organisation')),
            ],
        ),
    ]
