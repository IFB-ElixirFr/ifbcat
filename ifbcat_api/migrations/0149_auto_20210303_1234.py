# Generated by Django 3.0.11 on 2021-03-03 12:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('ifbcat_api', '0148_auto_20210303_1112'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='event',
            name='hostedBy',
        ),
        migrations.RemoveField(
            model_name='event',
            name='user_profile',
        ),
        migrations.AlterField(
            model_name='event',
            name='communities',
            field=models.ManyToManyField(blank=True, help_text='Community for which the event is relevant.', to='ifbcat_api.Community'),
        ),
        migrations.AlterField(
            model_name='event',
            name='contactId',
            field=models.ForeignKey(help_text='IFB ID of person to contact about the event.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='event',
            name='costs',
            field=models.ManyToManyField(blank=True, help_text="Monetary cost to attend the event, e.g. 'Free to academics'.", to='ifbcat_api.EventCost'),
        ),
        migrations.AlterField(
            model_name='event',
            name='dates',
            field=models.ManyToManyField(help_text='Date(s) and optional time periods on which the event takes place.', to='ifbcat_api.EventDate'),
        ),
        migrations.AlterField(
            model_name='event',
            name='elixirPlatforms',
            field=models.ManyToManyField(blank=True, help_text='ELIXIR Platform to which the event is relevant.', to='ifbcat_api.ElixirPlatform'),
        ),
        migrations.AlterField(
            model_name='event',
            name='keywords',
            field=models.ManyToManyField(blank=True, help_text='A keyword (beyond EDAM ontology scope) describing the event.', to='ifbcat_api.Keyword'),
        ),
        migrations.AlterField(
            model_name='event',
            name='organisedByOrganisations',
            field=models.ManyToManyField(blank=True, help_text='An organisation that is organizing the event.', to='ifbcat_api.Organisation'),
        ),
        migrations.AlterField(
            model_name='event',
            name='organisedByTeams',
            field=models.ManyToManyField(blank=True, help_text='A Team that is organizing the event.', to='ifbcat_api.Team'),
        ),
        migrations.AlterField(
            model_name='event',
            name='prerequisites',
            field=models.ManyToManyField(blank=True, help_text="A skill which the audience should (ideally) possess to get the most out of the event, e.g. 'Python'.", to='ifbcat_api.EventPrerequisite'),
        ),
        migrations.AlterField(
            model_name='event',
            name='sponsoredBy',
            field=models.ManyToManyField(blank=True, help_text='An institutional entity that is sponsoring the event.', to='ifbcat_api.EventSponsor'),
        ),
        migrations.AlterField(
            model_name='event',
            name='topics',
            field=models.ManyToManyField(blank=True, help_text='URIs of EDAM Topic terms describing the scope of the event.', to='ifbcat_api.Topic'),
        ),
        migrations.AlterField(
            model_name='eventsponsor',
            name='organisationId',
            field=models.ForeignKey(help_text='IFB ID of a event-sponsoring organisation registered in the IFB catalogue.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ifbcat_api.Organisation'),
        ),
    ]
