# Generated by Django 3.0 on 2020-08-12 12:00

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('ifbcat_api', '0062_create_licence_and_audience_type_and_role'),
    ]

    operations = [
        migrations.CreateModel(
            name='ComputingFacility',
            fields=[
                ('resource_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ifbcat_api.Resource')),
                ('homepage', models.URLField(help_text='URL where the computing facility can be accessed.', max_length=255)),
                ('accessibility', models.CharField(blank=True, choices=[('Internal', 'Internal'), ('National', 'National'), ('International', 'International')], help_text='Accessibillity of the computing facility to end-users.', max_length=255)),
                ('requestAccount', models.URLField(help_text='URL of web page where one can request access to the computing facility.', max_length=255)),
                ('termsOfUse', models.URLField(help_text='URL where terms of use of the computing facility can be found.', max_length=255)),
                ('serverDescription', models.CharField(help_text='Description of number and type of servers.', max_length=255)),
                ('storageTb', models.PositiveSmallIntegerField(blank=True, help_text='Amount of storage (TB) provided by the computing facility.', null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('cpuCores', models.PositiveSmallIntegerField(blank=True, help_text='Number of CPU cores provided by the computing facility.', null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('ramGb', models.PositiveSmallIntegerField(blank=True, help_text='RAM (GB) provided by the computing facility.', null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('ramPerCoreGb', models.PositiveSmallIntegerField(blank=True, help_text='RAM (GB) per CPU core provided by the Platform physical infrastructure.', null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('cpuHoursYearly', models.PositiveSmallIntegerField(blank=True, help_text='Number of CPU hours provided by the computing facility in the last year.', null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('usersYearly', models.PositiveSmallIntegerField(blank=True, help_text='Number of users served by the computing facility in the last year.', null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('trainingMaterials', models.ManyToManyField(blank=True, help_text='Training material for the computing facility.', related_name='computingFacilities', to='ifbcat_api.TrainingMaterial')),
            ],
            bases=('ifbcat_api.resource',),
        ),
    ]
