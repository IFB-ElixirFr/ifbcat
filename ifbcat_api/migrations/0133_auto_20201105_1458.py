# Generated by Django 3.0.7 on 2020-11-05 14:58

from django.conf import settings
from django.db import migrations, models

import ifbcat_api.validators


class Migration(migrations.Migration):

    dependencies = [
        ('ifbcat_api', '0133_auto_20201104_1425'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='bioinformaticsteam',
            name='address',
        ),
        migrations.RemoveField(
            model_name='bioinformaticsteam',
            name='affiliatedWith',
        ),
        migrations.RemoveField(
            model_name='bioinformaticsteam',
            name='certification',
        ),
        migrations.RemoveField(
            model_name='bioinformaticsteam',
            name='communities',
        ),
        migrations.RemoveField(
            model_name='bioinformaticsteam',
            name='fields',
        ),
        migrations.RemoveField(
            model_name='bioinformaticsteam',
            name='fundedBy',
        ),
        migrations.RemoveField(
            model_name='bioinformaticsteam',
            name='keywords',
        ),
        migrations.RemoveField(
            model_name='bioinformaticsteam',
            name='logo_url',
        ),
        migrations.RemoveField(
            model_name='bioinformaticsteam',
            name='orgid',
        ),
        migrations.RemoveField(
            model_name='bioinformaticsteam',
            name='projects',
        ),
        migrations.RemoveField(
            model_name='bioinformaticsteam',
            name='publications',
        ),
        migrations.RemoveField(
            model_name='bioinformaticsteam',
            name='topics',
        ),
        migrations.RemoveField(
            model_name='bioinformaticsteam',
            name='unitId',
        ),
        migrations.AddField(
            model_name='bioinformaticsteam',
            name='edamTopics',
            field=models.ManyToManyField(blank=True, help_text='URIs of EDAM Topic terms describing the bioinformatics team.', related_name='bioinformaticsTeamsEdamTopics', to='ifbcat_api.Topic'),
        ),
        migrations.AddField(
            model_name='team',
            name='address',
            field=models.TextField(blank=True, help_text='Postal address of the team.'),
        ),
        migrations.AddField(
            model_name='team',
            name='affiliatedWith',
            field=models.ManyToManyField(blank=True, help_text='Organisation(s) to which the team is affiliated.', related_name='teamsAffiliatedWith', to='ifbcat_api.Organisation'),
        ),
        migrations.AddField(
            model_name='team',
            name='certification',
            field=models.CharField(blank=True, choices=[('Certificate 1', 'Certificate 1')], help_text='Certification (e.g. ISO) of the bioinformatics team.', max_length=255),
        ),
        migrations.AddField(
            model_name='team',
            name='city',
            field=models.CharField(blank=True, help_text='City where the team is located.', max_length=255),
        ),
        migrations.AddField(
            model_name='team',
            name='communities',
            field=models.ManyToManyField(blank=True, help_text='Communities in which the bioinformatics team is involved.', related_name='teamsCommunities', to='ifbcat_api.Community'),
        ),
        migrations.AddField(
            model_name='team',
            name='country',
            field=models.CharField(blank=True, help_text='country where the team is located.', max_length=255),
        ),
        migrations.AddField(
            model_name='team',
            name='fields',
            field=models.ManyToManyField(blank=True, help_text='A broad field that the team serves.', related_name='teamsFields', to='ifbcat_api.Field'),
        ),
        migrations.AddField(
            model_name='team',
            name='fundedBy',
            field=models.ManyToManyField(help_text='Organisation(s) that funds the team.', related_name='teamsFunders', to='ifbcat_api.Organisation'),
        ),
        migrations.AddField(
            model_name='team',
            name='keywords',
            field=models.ManyToManyField(blank=True, help_text='A keyword (beyond EDAM ontology scope) describing the bioinformatics team.', related_name='teamsKeywords', to='ifbcat_api.Keyword'),
        ),
        migrations.AddField(
            model_name='team',
            name='linkCovid19',
            field=models.TextField(blank=True, help_text='Describe the ways your team contributes to resources related to Covid-19.'),
        ),
        migrations.AddField(
            model_name='team',
            name='logo_url',
            field=models.URLField(blank=True, help_text='URL of logo of the team.', max_length=512, null=True),
        ),
        migrations.AddField(
            model_name='team',
            name='orgid',
            field=models.CharField(blank=True, help_text='Organisation ID (GRID or ROR ID) of the team.', max_length=255, null=True, unique=True, validators=[ifbcat_api.validators.validate_grid_or_ror_id]),
        ),
        migrations.AddField(
            model_name='team',
            name='projects',
            field=models.ManyToManyField(blank=True, help_text='Project(s) that the team is involved with, supports or hosts.', related_name='teamsProjects', to='ifbcat_api.Project'),
        ),
        migrations.AddField(
            model_name='team',
            name='publications',
            field=models.ManyToManyField(blank=True, help_text='Publication(s) that describe the team.', related_name='teamsPublications', to='ifbcat_api.Doi'),
        ),
        migrations.AddField(
            model_name='team',
            name='unitId',
            field=models.CharField(blank=True, help_text='Unit ID (unique identifier of research or service unit) that the Team belongs to.', max_length=255),
        ),
        migrations.AlterField(
            model_name='bioinformaticsteam',
            name='platforms',
            field=models.ManyToManyField(blank=True, help_text='ELIXIR Platform(s) in which the bioinformatics team is involved.', related_name='bioinformaticsTeamsPlatforms', to='ifbcat_api.ElixirPlatform'),
        ),
        migrations.AlterField(
            model_name='team',
            name='deputies',
            field=models.ManyToManyField(help_text='Deputy leader(s) of the team.', related_name='teamsDeputies', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='team',
            name='expertise',
            field=models.ManyToManyField(blank=True, help_text='Please enter here one or several keywords describing the general and specific expertises of the team. Please note that individual expertises will also be documented in the "members" tab. Multiple expertises should be separated by semicolumns.', related_name='teamsExpertise', to='ifbcat_api.Topic'),
        ),
        migrations.AlterField(
            model_name='team',
            name='maintainers',
            field=models.ManyToManyField(help_text='Maintainer(s) of the team metadata in IFB catalogue.', related_name='teamsMaintainers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='team',
            name='members',
            field=models.ManyToManyField(help_text='Members of the team.', related_name='teamsMembers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='team',
            name='scientificLeaders',
            field=models.ManyToManyField(help_text='Scientific leader(s) of the team.', related_name='teamsScientificLeaders', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='team',
            name='technicalLeaders',
            field=models.ManyToManyField(help_text='Technical leader(s) of the team.', related_name='teamsTechnicalLeaders', to=settings.AUTH_USER_MODEL),
        ),
    ]
